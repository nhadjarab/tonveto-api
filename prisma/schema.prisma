// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Auth {
  email        String @id @unique
  passwordHash String
}

model Pet {
  id            String          @id @unique @default(cuid())
  sex           String
  name          String
  birth_date    String
  species       String
  breed         String
  crossbreed    Boolean
  sterilised    Boolean
  owner         User            @relation(fields: [owner_id], references: [id])
  owner_id      String
  appointments  Appointment[]
  MedicalReport MedicalReport[]
}

model User {
  id               String  @id @unique @default(cuid())
  first_name       String
  last_name        String
  email            String  @unique
  birth_date       String
  phone_number     String
  profile_complete Boolean @default(false)
  type             String  @default("user")

  pets         Pet[]
  appointments Appointment[]
}

model Vet {
  id                   String          @id @unique @default(cuid())
  first_name           String
  last_name            String
  email                String          @unique
  birth_date           String
  phone_number         String
  identification_order Int             @unique
  profile_complete     Boolean         @default(false)
  type                 String          @default("vet")
  specialities         Specialty[]
  bank_details         String
  appointments         Appointment[]
  clinics              VetClinic[]
  Clinic               Clinic[]
  calendar             Calendar[]
  MedicalReport        MedicalReport[]
}

model VetClinic {
  id        String  @unique @default(cuid())
  vet       Vet     @relation(fields: [vet_id], references: [id])
  vet_id    String
  clinic    Clinic  @relation(fields: [clinic_id], references: [id])
  clinic_id String
  approved  Boolean @default(false)

  @@id([vet_id, clinic_id])
}

model Specialty {
  id     String @id @unique @default(cuid())
  name   String
  price  Int
  vet    Vet    @relation(fields: [vet_id], references: [id])
  vet_id String
}

model Clinic {
  id           String      @id @unique @default(cuid())
  name         String
  address      String
  city         String
  country      String
  phone_number String
  owner_id     String
  owner        Vet         @relation(fields: [owner_id], references: [id])
  vets         VetClinic[]
}

model Appointment {
  id            String          @id @unique @default(cuid())
  date          String
  time          String
  pet           Pet             @relation(fields: [pet_id], references: [id])
  pet_id        String
  vet           Vet             @relation(fields: [vet_id], references: [id])
  vet_id        String
  user          User            @relation(fields: [user_id], references: [id])
  user_id       String
  MedicalReport MedicalReport[]
}

model Calendar {
  id        String @id @unique @default(cuid())
  monday    String
  tuesday   String
  wednesday String
  thursday  String
  friday    String
  saturday  String
  sunday    String
  owner_id  String @unique
  vet       Vet    @relation(fields: [owner_id], references: [id])
}

model MedicalReport {
  id             String      @id @unique @default(cuid())
  appointment_id String
  appointment    Appointment @relation(fields: [appointment_id], references: [id])
  reason         String
  diagnosis      String
  treatment      String
  notes          String
  pet_id         String
  pet            Pet         @relation(fields: [pet_id], references: [id])
  vet_id         String
  vet            Vet         @relation(fields: [vet_id], references: [id])
}
